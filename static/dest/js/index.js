webpackJsonp([2],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _history = __webpack_require__(504);\n\nvar _components = __webpack_require__(501);\n\nvar _reactRouter = __webpack_require__(181);\n\nvar _reactBootstrap = __webpack_require__(237);\n\nvar _train = __webpack_require__(506);\n\nvar _predict = __webpack_require__(509);\n\nvar React = __webpack_require__(183);\nvar ReactDom = __webpack_require__(1);\nvar ReactRouter = __webpack_require__(181);\n\nvar _ = __webpack_require__(493);\n\nvar history = (0, _reactRouter.useRouterHistory)(_history.createHashHistory)({\n    basename: '/'\n});\n\nvar AppStatus = React.createClass({\n    displayName: 'AppStatus',\n\n    getInitialState: function getInitialState() {\n        return {\n            queue: {}\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        var _this = this;\n\n        (0, _components.newfetch)(\"/task/queue/\").then(function (response) {\n            return response.json();\n        }).then(function (response_json) {\n            _this.setState({ \"queue\": response_json.data });\n        });\n    },\n    render: function render() {\n        return React.createElement(\n            'div',\n            null,\n            React.createElement(\n                _reactBootstrap.Well,\n                null,\n                '\\u4EFB\\u52A1\\u961F\\u5217\\u72B6\\u6001'\n            ),\n            React.createElement(\n                _reactBootstrap.Table,\n                { condensed: true, responsive: true, striped: true },\n                React.createElement(\n                    'tbody',\n                    null,\n                    _.map(this.state.queue, function (value, key) {\n                        return React.createElement(\n                            'tr',\n                            { key: key },\n                            React.createElement(\n                                'td',\n                                { className: 'col-lg-2' },\n                                key,\n                                '\\u603B\\u91CF:',\n                                value.total\n                            ),\n                            React.createElement(\n                                'td',\n                                { className: 'col-lg-10' },\n                                React.createElement(_reactBootstrap.ProgressBar, {\n                                    max: value.total,\n                                    now: value.active,\n                                    label: '\\u5DE5\\u4F5C\\u4E2D:' + value.active\n                                }),\n                                '  '\n                            )\n                        );\n                    })\n                )\n            )\n        );\n    }\n});\nvar App = React.createClass({\n    displayName: 'App',\n\n    getInitialState: function getInitialState() {\n        return {\n            activeKey: window.location.hash,\n            user_id: null\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        var _this2 = this;\n\n        fetch(\"/user/\", { credentials: \"include\" }).then(function (response) {\n            return response.json();\n        }).then(function (response_json) {\n            _this2.setState(response_json.data);\n        });\n    },\n    handleSelect: function handleSelect(selectedKey) {\n        this.setState({ activeKey: selectedKey }, function () {\n            window.location.hash = selectedKey;\n        });\n    },\n    render: function render() {\n        return React.createElement(\n            _reactBootstrap.Grid,\n            null,\n            React.createElement(\n                _reactBootstrap.Row,\n                { className: 'show-grid' },\n                React.createElement(\n                    _reactBootstrap.Navbar,\n                    null,\n                    React.createElement(\n                        _reactBootstrap.Nav,\n                        { activeKey: this.state.activeKey, onSelect: this.handleSelect },\n                        React.createElement(\n                            _reactBootstrap.NavItem,\n                            { eventKey: \"#/\", href: '#/' },\n                            '\\u8BAD\\u7EC3'\n                        ),\n                        React.createElement(\n                            _reactBootstrap.NavItem,\n                            { eventKey: \"#/predict\", href: '#/predict' },\n                            '\\u9884\\u6D4B'\n                        ),\n                        React.createElement(\n                            _reactBootstrap.NavItem,\n                            { eventKey: \"#/status\", href: '#/status' },\n                            '\\u7CFB\\u7EDF\\u72B6\\u6001'\n                        )\n                    ),\n                    React.createElement(\n                        _reactBootstrap.Nav,\n                        { pullRight: true },\n                        this.state.user_id ? React.createElement(\n                            _reactBootstrap.NavItem,\n                            { href: '/user/logout/' },\n                            this.state.user_id,\n                            ',Logout'\n                        ) : React.createElement(\n                            _reactBootstrap.NavItem,\n                            { href: '/user/login/' },\n                            'Login'\n                        )\n                    )\n                )\n            ),\n            React.createElement(\n                _reactBootstrap.Row,\n                { className: 'show-grid' },\n                React.createElement(\n                    _reactBootstrap.Panel,\n                    null,\n                    this.props.children ? this.props.children : React.createElement(_train.TrainProgress, null)\n                )\n            )\n        );\n    }\n});\n\nReactDom.render(React.createElement(\n    _reactRouter.Router,\n    { history: history },\n    React.createElement(\n        _reactRouter.Route,\n        { path: '/', component: App },\n        React.createElement(_reactRouter.Route, { path: 'status', component: AppStatus }),\n        React.createElement(_reactRouter.Route, { path: 'predict', component: _predict.PredictProgress })\n    )\n), document.getElementById(\"container\"));\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/src/jsx/index.jsx\n// module id = 0\n// module chunks = 2\n//# sourceURL=webpack:///./static/src/jsx/index.jsx?");

/***/ },

/***/ 504:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nexports.__esModule = true;\nexports.locationsAreEqual = exports.Actions = exports.useQueries = exports.useBeforeUnload = exports.useBasename = exports.createMemoryHistory = exports.createHashHistory = exports.createHistory = undefined;\n\nvar _LocationUtils = __webpack_require__(218);\n\nObject.defineProperty(exports, 'locationsAreEqual', {\n  enumerable: true,\n  get: function get() {\n    return _LocationUtils.locationsAreEqual;\n  }\n});\n\nvar _createBrowserHistory = __webpack_require__(227);\n\nvar _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);\n\nvar _createHashHistory2 = __webpack_require__(235);\n\nvar _createHashHistory3 = _interopRequireDefault(_createHashHistory2);\n\nvar _createMemoryHistory2 = __webpack_require__(221);\n\nvar _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);\n\nvar _useBasename2 = __webpack_require__(220);\n\nvar _useBasename3 = _interopRequireDefault(_useBasename2);\n\nvar _useBeforeUnload2 = __webpack_require__(505);\n\nvar _useBeforeUnload3 = _interopRequireDefault(_useBeforeUnload2);\n\nvar _useQueries2 = __webpack_require__(214);\n\nvar _useQueries3 = _interopRequireDefault(_useQueries2);\n\nvar _Actions2 = __webpack_require__(212);\n\nvar _Actions = _interopRequireWildcard(_Actions2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.createHistory = _createBrowserHistory2.default;\nexports.createHashHistory = _createHashHistory3.default;\nexports.createMemoryHistory = _createMemoryHistory3.default;\nexports.useBasename = _useBasename3.default;\nexports.useBeforeUnload = _useBeforeUnload3.default;\nexports.useQueries = _useQueries3.default;\nexports.Actions = _Actions;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/history/lib/index.js\n// module id = 504\n// module chunks = 2\n//# sourceURL=webpack:///./~/history/lib/index.js?");

/***/ },

/***/ 505:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _invariant = __webpack_require__(186);\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _DOMUtils = __webpack_require__(230);\n\nvar _ExecutionEnvironment = __webpack_require__(228);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar startListener = function startListener(getPromptMessage) {\n  var handleBeforeUnload = function handleBeforeUnload(event) {\n    var message = getPromptMessage();\n\n    if (typeof message === 'string') {\n      (event || window.event).returnValue = message;\n      return message;\n    }\n\n    return undefined;\n  };\n\n  (0, _DOMUtils.addEventListener)(window, 'beforeunload', handleBeforeUnload);\n\n  return function () {\n    return (0, _DOMUtils.removeEventListener)(window, 'beforeunload', handleBeforeUnload);\n  };\n};\n\n/**\n * Returns a new createHistory function that can be used to create\n * history objects that know how to use the beforeunload event in web\n * browsers to cancel navigation.\n */\nvar useBeforeUnload = function useBeforeUnload(createHistory) {\n  !_ExecutionEnvironment.canUseDOM ?  true ? (0, _invariant2.default)(false, 'useBeforeUnload only works in DOM environments') : (0, _invariant2.default)(false) : void 0;\n\n  return function (options) {\n    var history = createHistory(options);\n\n    var listeners = [];\n    var stopListener = void 0;\n\n    var getPromptMessage = function getPromptMessage() {\n      var message = void 0;\n      for (var i = 0, len = listeners.length; message == null && i < len; ++i) {\n        message = listeners[i].call();\n      }return message;\n    };\n\n    var listenBeforeUnload = function listenBeforeUnload(listener) {\n      if (listeners.push(listener) === 1) stopListener = startListener(getPromptMessage);\n\n      return function () {\n        listeners = listeners.filter(function (item) {\n          return item !== listener;\n        });\n\n        if (listeners.length === 0 && stopListener) {\n          stopListener();\n          stopListener = null;\n        }\n      };\n    };\n\n    return _extends({}, history, {\n      listenBeforeUnload: listenBeforeUnload\n    });\n  };\n};\n\nexports.default = useBeforeUnload;\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/history/lib/useBeforeUnload.js\n// module id = 505\n// module chunks = 2\n//# sourceURL=webpack:///./~/history/lib/useBeforeUnload.js?");

/***/ },

/***/ 506:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TrainProgress = undefined;\n\nvar _dataset = __webpack_require__(507);\n\nvar _dataset2 = _interopRequireDefault(_dataset);\n\nvar _methods = __webpack_require__(508);\n\nvar _reactBootstrap = __webpack_require__(237);\n\nvar _components = __webpack_require__(501);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar React = __webpack_require__(183);\nvar ReactDom = __webpack_require__(1);\n\nvar _ = __webpack_require__(493);\n\nfunction paramsReducer(state, action) {\n    switch (action.type) {\n        case \"dataset\":\n            {\n                return _.extend(state, { dataset: action.data });\n            }\n        case \"method\":\n            {\n                return _.extend(state, { method: action.data });\n            }\n        default:\n            return state;\n    }\n}\nvar TrainProgress = React.createClass({\n    displayName: 'TrainProgress',\n\n    childContextTypes: {\n        store: React.PropTypes.any\n    },\n    getInitialState: function getInitialState() {\n        this.store = new _components.EventStore(paramsReducer, {});\n        return {\n            activeTab: 1,\n            dataset: null,\n            method: null\n        };\n    },\n    onDatasetChange: function onDatasetChange(data) {\n        if (data != this.state.dataset) this.setState({\n            dataset: data\n        });\n    },\n    onMethodChange: function onMethodChange(data) {\n        console.log(\"method\", data);\n        if (data != this.state.method) this.setState({\n            method: data\n        });\n    },\n    getChildContext: function getChildContext() {\n        return { store: this.store };\n    },\n\n    componentDidMount: function componentDidMount() {\n        this.store.addListener(\"dataset\", this.onDatasetChange);\n        this.store.addListener(\"method\", this.onMethodChange);\n    },\n    componentWillUnmount: function componentWillUnmount() {\n        this.store.removeListener(\"dataset\", this.onDatasetChange);\n        this.store.removeListener(\"method\", this.onMethodChange);\n    },\n    onNextStep: function onNextStep() {\n        this.setState({ activeTab: this.state.activeTab + 1 });\n    },\n    onPrevStep: function onPrevStep() {\n        this.setState({ activeTab: this.state.activeTab - 1 });\n    },\n    handleSelect: function handleSelect(selectedKey) {\n        this.setState({ activeTab: selectedKey });\n    },\n    render: function render() {\n        var nextBtnDisable;\n        switch (this.state.activeTab) {\n            case 1:\n                {\n                    nextBtnDisable = !this.state.dataset;\n                    break;\n                }\n            case 2:\n                {\n                    nextBtnDisable = !this.state.method;\n                    break;\n                }\n            case 3:\n                {\n                    nextBtnDisable = false;\n                    break;\n                }\n            default:\n                nextBtnDisable = true;\n        }\n        return React.createElement(\n            'div',\n            null,\n            React.createElement(\n                _reactBootstrap.Nav,\n                { bsStyle: 'tabs',\n                    justified: true,\n                    activeKey: this.state.activeTab,\n                    onSelect: this.handleSelect },\n                React.createElement(\n                    _reactBootstrap.NavItem,\n                    { eventKey: 1 },\n                    '\\u9009\\u62E9\\u6570\\u636E\\u96C6'\n                ),\n                React.createElement(\n                    _reactBootstrap.NavItem,\n                    { eventKey: 2, disabled: !this.state.dataset },\n                    '\\u9009\\u62E9\\u6A21\\u578B'\n                ),\n                React.createElement(\n                    _reactBootstrap.NavItem,\n                    { eventKey: 3, disabled: !this.state.method },\n                    '\\u5F00\\u59CB'\n                )\n            ),\n            React.createElement(\n                _reactBootstrap.ButtonToolbar,\n                null,\n                React.createElement(\n                    _reactBootstrap.Button,\n                    { className: 'pull-right',\n                        bsStyle: 'primary',\n                        onClick: this.onNextStep,\n                        disabled: nextBtnDisable },\n                    '\\u4E0B\\u4E00\\u6B65'\n                ),\n                this.state.activeTab > 1 ? React.createElement(\n                    _reactBootstrap.Button,\n                    { className: 'pull-right',\n                        bsStyle: 'primary', onClick: this.onPrevStep },\n                    '\\u4E0A\\u4E00\\u6B65'\n                ) : null\n            ),\n            this.state.activeTab == 1 ? React.createElement(_dataset2.default, null) : null,\n            this.state.activeTab == 2 ? React.createElement(_methods.MethodList, null) : null,\n            this.state.activeTab == 3 ? React.createElement(_methods.MethodKwargs, null) : null\n        );\n    }\n});\n\nexports.TrainProgress = TrainProgress;\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/src/jsx/train.jsx\n// module id = 506\n// module chunks = 2\n//# sourceURL=webpack:///./static/src/jsx/train.jsx?");

/***/ },

/***/ 507:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _components = __webpack_require__(501);\n\nvar _reactBootstrap = __webpack_require__(237);\n\nvar React = __webpack_require__(183);\nvar ReactDom = __webpack_require__(1);\n\n\nvar DatasetPreview = React.createClass({\n    displayName: 'DatasetPreview',\n\n    getInitialState: function getInitialState() {\n        return {\n            data: [],\n            data_id: this.props.data_id,\n            length: 0,\n            meta: null\n        };\n    },\n    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (nextProps.data_id != this.state.data_id) {\n            this.setState({ data_id: nextProps.data_id }, this.loadDataset);\n        }\n    },\n    loadDataset: function loadDataset() {\n        var _this = this;\n\n        (0, _components.newfetch)('/data/' + this.state.data_id + '/').then(function (response) {\n            return response.json();\n        }).then(function (response_json) {\n            _this.setState({ data: response_json.data,\n                meta: response_json.meta });\n        });\n    },\n\n    componentDidMount: function componentDidMount() {\n        if (this.state.data_id) {\n            this.loadDataset();\n        }\n    },\n    render: function render() {\n        return React.createElement(\n            _reactBootstrap.Row,\n            { className: 'show-grid' },\n            this.state.meta ? React.createElement(\n                _reactBootstrap.Col,\n                { xs: 12, sm: 12 },\n                '\\u6570\\u636E\\u96C6\\u9884\\u89C8,\\u663E\\u793A\\u7B2C',\n                this.state.meta.offset,\n                '~',\n                this.state.meta.limit + this.state.meta.offset,\n                '\\u6761\\uFF0C\\u5171',\n                this.state.meta.total,\n                '\\u6761'\n            ) : null,\n            React.createElement(\n                _reactBootstrap.Col,\n                { xs: 12, sm: 12 },\n                React.createElement(\n                    _reactBootstrap.Table,\n                    { condensed: true, responsive: true, striped: true },\n                    this.state.meta ? React.createElement(\n                        'thead',\n                        null,\n                        React.createElement(\n                            'tr',\n                            null,\n                            this.state.meta.headers.map(function (header, index) {\n                                return React.createElement(\n                                    'th',\n                                    { key: index },\n                                    header\n                                );\n                            })\n                        )\n                    ) : null,\n                    React.createElement(\n                        'tbody',\n                        null,\n                        this.state.data.map(function (row, index) {\n                            return React.createElement(\n                                'tr',\n                                { key: index },\n                                row.map(function (col, i) {\n                                    return React.createElement(\n                                        'td',\n                                        { key: index + '.' + i },\n                                        col\n                                    );\n                                })\n                            );\n                        })\n                    )\n                )\n            )\n        );\n    }\n});\nvar Dataset = React.createClass({\n    displayName: 'Dataset',\n\n    contextTypes: {\n        store: React.PropTypes.any\n    },\n    getInitialState: function getInitialState() {\n        this.store = this.context.store;\n        return {\n            dataset: []\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        var _this2 = this;\n\n        (0, _components.newfetch)(\"/data/\").then(function (response) {\n            return response.json();\n        }).then(function (response_json) {\n            _this2.setState({ dataset: response_json.data });\n        });\n        this.store.addListener(\"dataset\", this.datasetChange);\n    },\n    datasetChange: function datasetChange() {\n        this.forceUpdate();\n    },\n    onChange: function onChange(evt) {\n        this.store.dispatch({ \"type\": \"dataset\",\n            data: evt.target.value });\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n        this.store.removeListener(\"dataset\", this.datasetChange);\n    },\n    render: function render() {\n        var _this3 = this;\n\n        var storeState = this.store.getState();\n        return React.createElement(\n            _reactBootstrap.Grid,\n            null,\n            React.createElement(\n                _reactBootstrap.Row,\n                { className: 'show-grid' },\n                React.createElement(\n                    _reactBootstrap.Col,\n                    { xs: 12, sm: 12 },\n                    '\\u6570\\u636E\\u96C6\\u5217\\u8868'\n                )\n            ),\n            React.createElement(\n                _reactBootstrap.Row,\n                { className: 'show-grid' },\n                React.createElement(\n                    _reactBootstrap.Col,\n                    { xs: 12, sm: 12 },\n                    React.createElement(\n                        _reactBootstrap.Table,\n                        { condensed: true, responsive: true, striped: true },\n                        React.createElement(\n                            'thead',\n                            null,\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'th',\n                                    null,\n                                    '\\u540D\\u79F0'\n                                ),\n                                React.createElement(\n                                    'th',\n                                    null,\n                                    '\\u7C7B\\u578B'\n                                ),\n                                React.createElement(\n                                    'th',\n                                    null,\n                                    '\\u63CF\\u8FF0'\n                                )\n                            )\n                        ),\n                        React.createElement(\n                            'tbody',\n                            null,\n                            this.state.dataset.map(function (data) {\n                                return React.createElement(\n                                    'tr',\n                                    { key: data.id },\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(\n                                            _reactBootstrap.Radio,\n                                            { onChange: _this3.onChange,\n                                                inline: true,\n                                                name: 'dataset',\n                                                checked: storeState.dataset == data.id,\n                                                value: data.id },\n                                            data.name\n                                        )\n                                    ),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        data.type\n                                    ),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        data.description\n                                    )\n                                );\n                            })\n                        )\n                    )\n                )\n            ),\n            React.createElement(DatasetPreview, { data_id: storeState.dataset })\n        );\n    }\n});\n\nexports.default = Dataset;\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/src/jsx/dataset.jsx\n// module id = 507\n// module chunks = 2\n//# sourceURL=webpack:///./static/src/jsx/dataset.jsx?");

/***/ },

/***/ 508:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MethodKwargs = exports.MethodList = undefined;\n\nvar _components = __webpack_require__(501);\n\nvar _reactBootstrap = __webpack_require__(237);\n\nvar React = __webpack_require__(183);\nvar ReactDom = __webpack_require__(1);\n\nvar marked = __webpack_require__(510);\nvar _ = __webpack_require__(493);\n\nvar MethodList = React.createClass({\n    displayName: 'MethodList',\n\n    contextTypes: {\n        store: React.PropTypes.any\n    },\n    getInitialState: function getInitialState() {\n        this.store = this.context.store;\n        return {\n            methods: []\n        };\n    },\n    componentDidMount: function componentDidMount() {\n        var _this = this;\n\n        (0, _components.newfetch)(\"/task/method/?public=true&trained=false\").then(function (response) {\n            return response.json();\n        }).then(function (response_json) {\n            _this.setState({ methods: response_json.data });\n        });\n        this.store.addListener(\"method\", this.methodChange);\n    },\n    methodChange: function methodChange() {\n        this.forceUpdate();\n    },\n    onChange: function onChange(evt) {\n        this.store.dispatch({ \"type\": \"method\",\n            data: evt.target.value });\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n        this.store.removeListener(\"method\", this.methodChange);\n    },\n    render: function render() {\n        var _this2 = this;\n\n        var storeState = this.store.getState();\n        return React.createElement(\n            _reactBootstrap.Grid,\n            null,\n            React.createElement(\n                _reactBootstrap.Row,\n                { className: 'show-grid' },\n                React.createElement(\n                    _reactBootstrap.Col,\n                    { xs: 12, sm: 12 },\n                    '\\u6A21\\u578B\\u5217\\u8868'\n                )\n            ),\n            React.createElement(\n                _reactBootstrap.Row,\n                { className: 'show-grid' },\n                React.createElement(\n                    _reactBootstrap.Col,\n                    { xs: 12, sm: 12 },\n                    React.createElement(\n                        _reactBootstrap.Table,\n                        { condensed: true, responsive: true, striped: true },\n                        React.createElement(\n                            'thead',\n                            null,\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'th',\n                                    null,\n                                    '\\u540D\\u79F0'\n                                ),\n                                React.createElement(\n                                    'th',\n                                    null,\n                                    '\\u63CF\\u8FF0'\n                                )\n                            )\n                        ),\n                        React.createElement(\n                            'tbody',\n                            null,\n                            this.state.methods.map(function (data) {\n                                return React.createElement(\n                                    'tr',\n                                    { key: data.id },\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(\n                                            _reactBootstrap.Radio,\n                                            { onChange: _this2.onChange,\n                                                inline: true,\n                                                name: 'methods',\n                                                checked: storeState.method == data.id,\n                                                value: data.id },\n                                            data.name\n                                        )\n                                    ),\n                                    React.createElement('td', { dangerouslySetInnerHTML: { __html: marked(data.description) } })\n                                );\n                            })\n                        )\n                    )\n                )\n            )\n        );\n    }\n});\nvar ArgInput = React.createClass({\n    displayName: 'ArgInput',\n    getInitialState: function getInitialState() {\n        switch (this.props.type) {\n            case \"int\":\n                {\n                    return { \"value\": this.props.value || 0 };\n                }\n            case \"list\":\n                {\n                    return { \"value\": [] };\n                }\n        }\n    },\n    handleChange: function handleChange(e) {\n        this.setState({ value: e.target.value });\n    },\n    addValue: function addValue() {\n        this.setState({ value: this.state.value.concat(0) });\n    },\n    removeValue: function removeValue(index) {\n        var _this3 = this;\n\n        return function (e) {\n            _this3.state.value.pop(index);\n            _this3.setState({ \"value\": _this3.state.value });\n        };\n    },\n    render: function render() {\n        var _this4 = this;\n\n        switch (this.props.type) {\n            case \"int\":\n                return React.createElement(_reactBootstrap.FormControl, {\n                    type: 'number',\n                    value: this.state.value,\n                    placeholder: '\\u8F93\\u5165\\u4E00\\u4E2A\\u6570\\u5B57',\n                    onChange: this.handleChange\n                });\n            case \"list\":\n                return React.createElement(\n                    _reactBootstrap.FormGroup,\n                    null,\n                    React.createElement(\n                        'a',\n                        { onClick: this.addValue },\n                        '+'\n                    ),\n                    this.state.value.map(function (v, index) {\n                        return [React.createElement(ArgInput, { key: index, type: 'int', value: v }), React.createElement(\n                            'a',\n                            { onClick: _this4.removeValue(index), className: 'btn btn-primary' },\n                            'x'\n                        )];\n                    })\n                );\n        }\n    }\n});\nvar MethodKwargs = React.createClass({\n    displayName: 'MethodKwargs',\n    getInitialState: function getInitialState() {\n        return { kwargs: [] };\n    },\n\n    contextTypes: {\n        store: React.PropTypes.any\n    },\n    componentDidMount: function componentDidMount() {\n        var _this5 = this;\n\n        this.store = this.context.store;\n        var state = this.store.getState();\n        var method_id = state.method;\n        (0, _components.newfetch)('/task/method/' + method_id + '/').then(function (response) {\n            return response.json();\n        }).then(function (response_json) {\n            _this5.setState({ kwargs: response_json.data.kwargs });\n        });\n    },\n    render: function render() {\n        return React.createElement(\n            _reactBootstrap.Grid,\n            null,\n            React.createElement(\n                _reactBootstrap.Row,\n                { className: 'show-grid' },\n                React.createElement(\n                    _reactBootstrap.Col,\n                    { xs: 12, sm: 12 },\n                    React.createElement(\n                        _reactBootstrap.Table,\n                        { condensed: true, responsive: true, striped: true },\n                        React.createElement(\n                            'thead',\n                            null,\n                            React.createElement(\n                                'tr',\n                                null,\n                                React.createElement(\n                                    'th',\n                                    null,\n                                    '\\u540D\\u79F0'\n                                ),\n                                React.createElement(\n                                    'th',\n                                    null,\n                                    '\\u63CF\\u8FF0'\n                                )\n                            )\n                        ),\n                        React.createElement(\n                            'tbody',\n                            null,\n                            this.state.kwargs.map(function (arg) {\n                                return React.createElement(\n                                    'tr',\n                                    { key: arg.id },\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        arg.label\n                                    ),\n                                    React.createElement(\n                                        'td',\n                                        null,\n                                        React.createElement(ArgInput, { type: arg.type })\n                                    )\n                                );\n                            })\n                        )\n                    )\n                )\n            )\n        );\n    }\n});\nexports.MethodList = MethodList;\nexports.MethodKwargs = MethodKwargs;\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/src/jsx/methods.jsx\n// module id = 508\n// module chunks = 2\n//# sourceURL=webpack:///./static/src/jsx/methods.jsx?");

/***/ },

/***/ 509:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar React = __webpack_require__(183);\nvar ReactDom = __webpack_require__(1);\nvar PredictProgress = React.createClass({\n    displayName: 'PredictProgress',\n    render: function render() {\n        return React.createElement(\n            'div',\n            null,\n            '\\u9884\\u6D4B'\n        );\n    }\n});\n\nexports.PredictProgress = PredictProgress;\n\n//////////////////\n// WEBPACK FOOTER\n// ./static/src/jsx/predict.jsx\n// module id = 509\n// module chunks = 2\n//# sourceURL=webpack:///./static/src/jsx/predict.jsx?");

/***/ },

/***/ 510:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities \n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (true) {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/marked/lib/marked.js\n// module id = 510\n// module chunks = 2\n//# sourceURL=webpack:///./~/marked/lib/marked.js?");

/***/ }

});